{"version":3,"file":"401.70d5fb0c.chunk.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.33.0(4b1abad427e58dbedc1215d99a0902ffc885fcd4)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __reExport = (target, module, copyDefault, desc) => {\n  if (module && typeof module === \"object\" || typeof module === \"function\") {\n    for (let key of __getOwnPropNames(module))\n      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\"))\n        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });\n  }\n  return target;\n};\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  _modeId;\n  _defaults;\n  _configChangeListener;\n  _updateExtraLibsToken;\n  _extraLibsChangeListener;\n  _worker;\n  _client;\n  constructor(modeId, defaults) {\n    this._modeId = modeId;\n    this._defaults = defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(() => this._updateExtraLibs());\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._worker = monaco_editor_core_exports.editor.createWebWorker({\n        moduleId: \"vs/language/typescript/tsWorker\",\n        label: this._modeId,\n        keepIdleModels: true,\n        createData: {\n          compilerOptions: this._defaults.getCompilerOptions(),\n          extraLibs: this._defaults.getExtraLibs(),\n          customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n          inlayHintsOptions: this._defaults.inlayHintsOptions\n        }\n      });\n      let p = this._worker.getProxy();\n      if (this._defaults.getEagerModelSync()) {\n        p = p.then((worker) => {\n          if (this._worker) {\n            return this._worker.withSyncedResources(monaco_editor_core_exports.editor.getModels().filter((model) => model.getLanguageId() === this._modeId).map((model) => model.uri));\n          }\n          return worker;\n        });\n      }\n      this._client = p;\n    }\n    return this._client;\n  }\n  getLanguageServiceWorker(...resources) {\n    let _client;\n    return this._getClient().then((client) => {\n      _client = client;\n    }).then((_) => {\n      if (this._worker) {\n        return this._worker.withSyncedResources(resources);\n      }\n    }).then((_) => _client);\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport {\n  typescriptDefaults\n} from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.esnext.promise.d.ts\"] = true;\nlibFileSet[\"lib.esnext.string.d.ts\"] = true;\nlibFileSet[\"lib.esnext.weakref.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map((displayPart) => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let { lineNumber: startLineNumber, column: startColumn } = p1;\n    let { lineNumber: endLineNumber, column: endColumn } = p2;\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  _libFiles;\n  _hasFetchedLibFiles;\n  _fetchLibFilesPromise;\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then((w) => w.getLibFiles()).then((libFiles) => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    const onModelAdd = (model) => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = (model) => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel((model) => onModelAdd(model)));\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n    }));\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach((model) => onModelAdd(model));\n  }\n  _disposables = [];\n  _listener = /* @__PURE__ */ Object.create(null);\n  dispose() {\n    this._disposables.forEach((d) => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter((d) => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1);\n    const relatedUris = diagnostics.map((d) => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map((relatedInformation) => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null);\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, diagnostics.map((d) => this._convertDiagnostics(model, d)));\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n    const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(diagStart + diagLength);\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach((info) => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n      const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(infoStart + infoLength);\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map((entry) => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers?.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(resource.toString(), offset, myItem.label);\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0)\n      tagLabel += ` \\u2014 ${rest.map((r) => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map((r) => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class extends Adapter {\n  signatureHelpTriggerCharacters = [\"(\", \",\"];\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return { kind: \"retrigger\", triggerCharacter: context.triggerCharacter };\n          } else {\n            return { kind: \"characterTyped\", triggerCharacter: context.triggerCharacter };\n          }\n        } else {\n          return { kind: \"invoked\" };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? { kind: \"retrigger\" } : { kind: \"invoked\" };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return { kind: \"invoked\" };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach((item) => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {\n      }\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map((tag) => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [\n        {\n          value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n        },\n        {\n          value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n        }\n      ]\n    };\n  }\n};\nvar OccurrencesAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getOccurrencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.map((entry) => {\n      return {\n        range: this._textSpanToRange(model, entry.textSpan),\n        kind: entry.isWriteAccess ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n      };\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const items = await worker.getNavigationBarItems(resource.toString());\n    if (!items || model.isDisposed()) {\n      return;\n    }\n    const convert = (bucket, item, containerLabel) => {\n      let result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: []\n      };\n      if (containerLabel)\n        result2.containerName = containerLabel;\n      if (item.childItems && item.childItems.length > 0) {\n        for (let child of item.childItems) {\n          convert(bucket, child, result2.name);\n        }\n      }\n      bucket.push(result2);\n    };\n    let result = [];\n    items.forEach((item) => convert(result, item));\n    return result;\n  }\n};\nvar Kind = class {\n};\n__publicField(Kind, \"unknown\", \"\");\n__publicField(Kind, \"keyword\", \"keyword\");\n__publicField(Kind, \"script\", \"script\");\n__publicField(Kind, \"module\", \"module\");\n__publicField(Kind, \"class\", \"class\");\n__publicField(Kind, \"interface\", \"interface\");\n__publicField(Kind, \"type\", \"type\");\n__publicField(Kind, \"enum\", \"enum\");\n__publicField(Kind, \"variable\", \"var\");\n__publicField(Kind, \"localVariable\", \"local var\");\n__publicField(Kind, \"function\", \"function\");\n__publicField(Kind, \"localFunction\", \"local function\");\n__publicField(Kind, \"memberFunction\", \"method\");\n__publicField(Kind, \"memberGetAccessor\", \"getter\");\n__publicField(Kind, \"memberSetAccessor\", \"setter\");\n__publicField(Kind, \"memberVariable\", \"property\");\n__publicField(Kind, \"constructorImplementation\", \"constructor\");\n__publicField(Kind, \"callSignature\", \"call\");\n__publicField(Kind, \"indexSignature\", \"index\");\n__publicField(Kind, \"constructSignature\", \"construct\");\n__publicField(Kind, \"parameter\", \"parameter\");\n__publicField(Kind, \"typeParameter\", \"type parameter\");\n__publicField(Kind, \"primitiveType\", \"primitive type\");\n__publicField(Kind, \"label\", \"label\");\n__publicField(Kind, \"alias\", \"alias\");\n__publicField(Kind, \"const\", \"const\");\n__publicField(Kind, \"let\", \"let\");\n__publicField(Kind, \"warning\", \"warning\");\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(resource.toString(), startOffset, endOffset, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(resource.toString(), offset, ch, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter((m) => m.code).map((m) => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(resource.toString(), start, end, errorCodes, formatOptions);\n    if (!codeFixes || model.isDisposed()) {\n      return { actions: [], dispose: () => {\n      } };\n    }\n    const actions = codeFixes.filter((fix) => {\n      return fix.changes.filter((change) => change.isNewFile).length === 0;\n    }).map((fix) => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {\n      }\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          edit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: { edits },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(fileName, offset, false, false, false);\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          edit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return { edits };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map((hint) => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return { hints, dispose: () => {\n    } };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const client = new WorkerManager(modeId, defaults);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  monaco_editor_core_exports.languages.registerCompletionItemProvider(modeId, new SuggestAdapter(worker));\n  monaco_editor_core_exports.languages.registerSignatureHelpProvider(modeId, new SignatureHelpAdapter(worker));\n  monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentHighlightProvider(modeId, new OccurrencesAdapter(worker));\n  monaco_editor_core_exports.languages.registerDefinitionProvider(modeId, new DefinitionAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerReferenceProvider(modeId, new ReferenceAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerDocumentSymbolProvider(modeId, new OutlineAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(modeId, new FormatAdapter(worker));\n  monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(modeId, new FormatOnTypeAdapter(worker));\n  monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker));\n  monaco_editor_core_exports.languages.registerRenameProvider(modeId, new RenameAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker));\n  new DiagnosticsAdapter(libFiles, defaults, modeId, worker);\n  return worker;\n}\nexport {\n  Adapter,\n  CodeActionAdaptor,\n  DefinitionAdapter,\n  DiagnosticsAdapter,\n  FormatAdapter,\n  FormatHelper,\n  FormatOnTypeAdapter,\n  InlayHintsAdapter,\n  Kind,\n  LibFiles,\n  OccurrencesAdapter,\n  OutlineAdapter,\n  QuickInfoAdapter,\n  ReferenceAdapter,\n  RenameAdapter,\n  SignatureHelpAdapter,\n  SuggestAdapter,\n  WorkerManager,\n  flattenDiagnosticMessageText,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  setupJavaScript,\n  setupTypeScript\n};\n"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__publicField","obj","key","value","enumerable","configurable","writable","__defNormalProp","monaco_editor_core_exports","target","module","copyDefault","desc","call","get","__reExport","WorkerManager","_modeId","_defaults","_configChangeListener","_updateExtraLibsToken","_extraLibsChangeListener","_worker","_client","constructor","modeId","defaults","this","onDidChange","_stopWorker","onDidExtraLibsChange","_updateExtraLibs","dispose","async","myToken","proxy","getProxy","updateExtraLibs","getExtraLibs","_getClient","editor","createWebWorker","moduleId","label","keepIdleModels","createData","compilerOptions","getCompilerOptions","extraLibs","customWorkerPath","workerOptions","inlayHintsOptions","p","getEagerModelSync","then","worker","withSyncedResources","getModels","filter","model","getLanguageId","map","uri","getLanguageServiceWorker","resources","client","_","libFileSet","flattenDiagnosticMessageText","diag","newLine","indent","result","i","messageText","next","kid","displayPartsToString","displayParts","displayPart","text","join","Adapter","_textSpanToRange","span","p1","getPositionAt","start","p2","length","lineNumber","startLineNumber","column","startColumn","endLineNumber","endColumn","LibFiles","_libFiles","_hasFetchedLibFiles","_fetchLibFilesPromise","isLibFile","path","indexOf","slice","getOrCreateModel","fileName","Uri","parse","getModel","createModel","matchedLibFile","typescriptDefaults","content","_containsLibFile","uris","_fetchLibFiles","w","getLibFiles","libFiles","DiagnosticsAdapter","_selector","super","onModelAdd","maybeValidate","onlyVisible","getDiagnosticsOptions","isAttachedToEditor","_doValidate","handle","changeSubscription","onDidChangeContent","clearTimeout","window","setTimeout","visibleSubscription","onDidChangeAttached","setModelMarkers","_listener","toString","onModelRemoved","_disposables","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","recomputeDiagostics","forEach","create","d","isDisposed","promises","noSyntaxValidation","noSemanticValidation","noSuggestionDiagnostics","getSyntacticDiagnostics","getSemanticDiagnostics","getSuggestionDiagnostics","allDiagnostics","Promise","all","diagnostics","reduce","c","concat","diagnosticCodesToIgnore","code","relatedUris","relatedInformation","file","fetchLibFilesIfNecessary","_convertDiagnostics","diagStart","diagLength","tags","reportsUnnecessary","MarkerTag","Unnecessary","reportsDeprecated","Deprecated","severity","_tsDiagnosticCategoryToMarkerSeverity","category","message","_convertRelatedInformation","info","relatedResource","infoStart","infoLength","resource","MarkerSeverity","Error","Info","Warning","Hint","SuggestAdapter","triggerCharacters","position","_context","token","wordInfo","getWordUntilPosition","wordRange","Range","offset","getOffsetAt","getCompletionsAtPosition","suggestions","entries","entry","range","replacementSpan","kindModifiers","languages","CompletionItemTag","name","insertText","sortText","kind","convertKind","item","myItem","details","getCompletionEntryDetails","detail","documentation","createDocumentationString","static","Kind","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","Module","class","Class","interface","Interface","warning","File","Property","documentationString","tag","tagToString","tagLabel","paramName","rest","r","Array","isArray","SignatureHelpAdapter","signatureHelpTriggerCharacters","context","triggerKind","SignatureHelpTriggerKind","TriggerCharacter","triggerCharacter","isRetrigger","ContentChange","Invoke","getSignatureHelpItems","triggerReason","_toSignatureHelpTriggerReason","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","QuickInfoAdapter","getQuickInfoAtPosition","contents","textSpan","OccurrencesAdapter","getOccurrencesAtPosition","isWriteAccess","DocumentHighlightKind","Write","Text","DefinitionAdapter","getDefinitionAtPosition","refModel","ReferenceAdapter","getReferencesAtPosition","OutlineAdapter","getNavigationBarItems","convert","bucket","containerLabel","result2","outlineTypeTable","SymbolKind","spans","selectionRange","containerName","childItems","child","Method","const","localFunction","javaScriptWorker","typeScriptWorker","FormatHelper","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","FormatAdapter","startOffset","endOffset","edits","getFormattingEditsForRange","_convertOptions","edit","FormatOnTypeAdapter","autoFormatTriggerCharacters","ch","getFormattingEditsAfterKeystroke","CodeActionAdaptor","end","formatOptions","getOptions","errorCodes","markers","m","Number","codeFixes","getCodeFixesAtPosition","actions","fix","changes","isNewFile","_tsCodeFixActionToMonacoCodeAction","codeFix","textChange","textChanges","title","description","RenameAdapter","newName","renameInfo","getRenameInfo","allowRenameOfImportPath","canRename","rejectReason","localizedErrorMessage","fileToRename","renameLocations","findRenameLocations","renameLocation","model2","InlayHintsAdapter","hints","provideInlayHints","hint","_convertHintKind","InlayHintKind","Parameter","Type","setupTypeScript","setupMode","setupJavaScript","getJavaScriptWorker","resolve","reject","getTypeScriptWorker","registerCompletionItemProvider","registerSignatureHelpProvider","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerDocumentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","registerCodeActionProvider","registerRenameProvider","registerInlayHintsProvider"],"sourceRoot":""}