diff --git c/Gulpfile.js w/Gulpfile.js
index a03b34f15..b8a30ddae 100644
--- c/Gulpfile.js
+++ w/Gulpfile.js
@@ -4,7 +4,7 @@ const plumber = require("gulp-plumber");
 const through = require("through2");
 const chalk = require("chalk");
 const newer = require("gulp-newer");
-const babel = require("gulp-babel");
+const sucrase = require("@sucrase/gulp-plugin");
 const gulpWatch = require("gulp-watch");
 const gutil = require("gulp-util");
 const filter = require("gulp-filter");
@@ -15,7 +15,6 @@ const merge = require("merge-stream");
 const rollup = require("rollup-stream");
 const source = require("vinyl-source-stream");
 const buffer = require("vinyl-buffer");
-const rollupBabel = require("rollup-plugin-babel");
 const rollupNodeResolve = require("rollup-plugin-node-resolve");
 const registerStandalonePackageTask = require("./scripts/gulp-tasks")
   .registerStandalonePackageTask;
@@ -79,7 +78,7 @@ function buildBabel(exclude) {
         .pipe(errorsLogger())
         .pipe(newer({ dest: base, map: swapSrcWithLib }))
         .pipe(compilationLogger())
-        .pipe(babel())
+        .pipe(sucrase({transforms: ["flow", "imports"]}))
         .pipe(
           // Passing 'file.relative' because newer() above uses a relative
           // path and this keeps it consistent.
@@ -113,9 +112,7 @@ function buildRollup(packages) {
 }
 
 gulp.task("build", function() {
-  const bundles = ["packages/babel-parser"];
-
-  return merge([buildBabel(/* exclude */ bundles), buildRollup(bundles)]);
+  return buildBabel();
 });
 
 gulp.task("default", gulp.series("build"));
diff --git c/Makefile w/Makefile
index a23354d7b..0f5e4b6f8 100644
--- c/Makefile
+++ w/Makefile
@@ -66,7 +66,9 @@ test-only:
 	BABEL_ENV=test ./scripts/test.sh
 	make test-clean
 
-test: lint test-only
+test:
+	make bootstrap
+	make test-only
 
 test-ci: bootstrap test-only
 
@@ -116,8 +118,13 @@ publish:
 	./node_modules/.bin/lerna publish --force-publish=* --exact --skip-temp-tag
 	make clean
 
-bootstrap: clean-all
+bootstrap:
 	yarn --ignore-engines
+	yarn link sucrase
+	yarn link @sucrase/gulp-plugin
+	yarn link @sucrase/jest-plugin
+	yarn link @sucrase/webpack-loader
+	yarn link @sucrase/webpack-object-rest-spread-plugin
 	./node_modules/.bin/lerna bootstrap -- --ignore-engines
 	make build
 	cd packages/babel-runtime; \
diff --git c/package.json w/package.json
index 2ef4be29b..cdcb4632d 100644
--- c/package.json
+++ w/package.json
@@ -77,6 +77,9 @@
     ]
   },
   "jest": {
+    "transform": {
+      ".js": "@sucrase/jest-plugin"
+    },
     "collectCoverageFrom": [
       "packages/*/src/**/*.mjs",
       "packages/*/src/**/*.js",
diff --git c/packages/babel-plugin-transform-regenerator/package.json w/packages/babel-plugin-transform-regenerator/package.json
index d7c9c2eae..efb3cc149 100644
--- c/packages/babel-plugin-transform-regenerator/package.json
+++ w/packages/babel-plugin-transform-regenerator/package.json
@@ -7,7 +7,7 @@
   "repository": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-regenerator",
   "main": "lib/index.js",
   "dependencies": {
-    "regenerator-transform": "^0.13.3"
+    "regenerator-transform": "0.13.3"
   },
   "license": "MIT",
   "peerDependencies": {
diff --git c/scripts/gulp-tasks.js w/scripts/gulp-tasks.js
index f3c696de5..5eab2452a 100644
--- c/scripts/gulp-tasks.js
+++ w/scripts/gulp-tasks.js
@@ -19,6 +19,7 @@ const RootMostResolvePlugin = require("webpack-dependency-suite")
 const webpack = require("webpack");
 const webpackStream = require("webpack-stream");
 const uglify = require("gulp-uglify");
+const ObjectRestSpreadPlugin = require("@sucrase/webpack-object-rest-spread-plugin");
 
 function webpackBuild(opts) {
   const plugins = opts.plugins || [];
@@ -37,12 +38,8 @@ function webpackBuild(opts) {
       rules: [
         {
           test: /\.js$/,
-          loader: "babel-loader",
-          options: {
-            // Use the bundled config so that module syntax is passed through
-            // for Webpack.
-            envName: "standalone",
-          },
+          loader: "@sucrase/webpack-loader",
+          options: {transforms: ["imports", "flow"]},
         },
       ],
     },
@@ -59,6 +56,7 @@ function webpackBuild(opts) {
       libraryTarget: "umd",
     },
     plugins: [
+      new ObjectRestSpreadPlugin(),
       new webpack.DefinePlugin({
         "process.env.NODE_ENV": '"production"',
         "process.env": JSON.stringify({ NODE_ENV: "production" }),
@@ -117,7 +115,7 @@ function registerStandalonePackageTask(
         gulp.dest(standalonePath),
       ].concat(
         // Minification is super slow, so we skip it in CI.
-        process.env.CI ? [] : uglify(),
+        // process.env.CI ? [] : uglify(),
         rename({ extname: ".min.js" }),
         gulp.dest(standalonePath)
       ),
